// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bankCodeFirst.Data;

#nullable disable

namespace bankCodeFirst.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20230127012254_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bankCodeFirst.Models.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.Property<string>("AccountStatusId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal");

                    b.Property<string>("Holder")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("AccountStatusId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("bankCodeFirst.Models.AccountStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.Property<string>("Text")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("accountstatuses", (string)null);
                });

            modelBuilder.Entity("bankCodeFirst.Models.TransactionTypes", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.Property<string>("Text")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("transactiontypes", (string)null);
                });

            modelBuilder.Entity("bankCodeFirst.Models.Transactions", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar");

                    b.Property<string>("TransactionTypeId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("bankCodeFirst.Models.Account", b =>
                {
                    b.HasOne("bankCodeFirst.Models.AccountStatus", "AccountStatus")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AccountStatus");
                });

            modelBuilder.Entity("bankCodeFirst.Models.Transactions", b =>
                {
                    b.HasOne("bankCodeFirst.Models.Account", "Accounts")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("bankCodeFirst.Models.TransactionTypes", "TransactionTypes")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("TransactionTypes");
                });

            modelBuilder.Entity("bankCodeFirst.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("bankCodeFirst.Models.AccountStatus", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("bankCodeFirst.Models.TransactionTypes", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
